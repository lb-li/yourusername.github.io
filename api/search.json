[{"id":"b84c84a24d4fbceb89d7a0429211000c","title":"AutoMapper配置教程","content":"1.NuGet安装  在项目中安装 AutoMapper 包；\n2.添加 AutoMapperConfigs 类到拓展文件夹csharpusing AutoMapper;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing CoreApiProject.Model;\nusing CoreApiProject.DTO;\n\nnamespace CoreApiProject.Api\n&#123;\n    public class AutoMapperConfigs : Profile\n    &#123;\n        //添加你的实体映射关系.\n        public AutoMapperConfigs()\n        &#123;\n            //Entity 转 Dto\n\n            CreateMap&lt;Good, GoodDto&gt;()\n     //属性不一致匹配\n                .ForMember(dest =&gt; dest.TypeName, opt =&gt; opt.MapFrom(src =&gt; src.TidNavigation.Name))\n                //映射发生之前\n                .BeforeMap((source, dto) =&gt;\n                &#123;\n                    //可以较为精确的控制输出数据格式\n                    //dto.CreateTime = Convert.ToDateTime(source.CreateTime).ToString(&quot;yyyy-MM-dd&quot;);\n                    dto.TypeName = source.TidNavigation.Name;\n                &#125;)\n                //映射发生之后\n                .AfterMap((source, dto) =&gt;\n                &#123;\n                    //code ...\n                &#125;)\n                .ReverseMap();\n\n            //UserDto转UserEntity.\n            //CreateMap();\n        &#125;\n    &#125;\n&#125;\n3.在管道中配置 配置Dto 模型映射    builder.Services.AddAutoMapper(AppDomain.CurrentDomain.GetAssemblies());\n","slug":"AutoFac配置教程 (2)","date":"2024-07-18T12:04:40.525Z","categories_index":".NET8 Api操作","tags_index":"AutoMapper,.NET,映射","author_index":"小刘"},{"id":"587b43135c6f3485b613ca8a7483ff63","title":"AutoFac配置教程","content":"1. 安装 AutoFac在项目中安装 Autofac.Extensions.DependencyInjection 包：\nbashdotnet add package Autofac.Extensions.DependencyInjection2. 配置类 CustomAutofacModule将配置类 CustomAutofacModule 放入拓展文件夹，并修改程序包名\ncsharpusing Autofac;\nusing System.Reflection;\n\nnamespace NET8Demo.Api\n&#123;\n    public class CustomAutofacModule : Autofac.Module\n    &#123;\n        /// &lt;summary&gt;\n        /// AutoFac注册类\n        /// &lt;/summary&gt;\n        /// &lt;param name=&quot;builder&quot;&gt;&lt;/param&gt;\n        protected override void Load(ContainerBuilder builder)\n        &#123;\n            List&lt;Type&gt; types = new List&lt;Type&gt;();\n            var svrNames = new string[] &#123; &quot;NET8Demo.Bll&quot;, &quot;NET8Demo.Dal&quot; &#125;;  //程序及名称\n            foreach (string item in svrNames)\n            &#123;\n                // 加载接口服务实现层。\n                Assembly SvrAss = Assembly.Load(item);\n                // 反射扫描这个程序集中所有的类，得到这个程序集中所有类的集合。\n                types.AddRange(SvrAss.GetTypes());\n            &#125;\n            // 告诉AutoFac容器，创建stypes这个集合中所有类的对象实例  在一次Http请求上下文中,共享一个组件实例\n            builder.RegisterTypes(types.ToArray())\n                        .AsImplementedInterfaces().InstancePerLifetimeScope().PropertiesAutowired();\n            //指明创建的stypes这个集合中所有类的对象实例，以其接口的形式保存\n        &#125;\n    &#125;\n&#125;\n3. 在服务管道中注册csharp// 以下是autofac依赖注入\nbuilder.Host.UseServiceProviderFactory(new AutofacServiceProviderFactory());\nbuilder.Host.ConfigureContainer&lt;ContainerBuilder&gt;(builder =&gt;\n&#123;\n    //批量注册服务  注册模块\n    builder.RegisterModule(new CustomAutofacModule());\n&#125;);","slug":"AutoFac配置教程","date":"2024-07-05T00:52:10.000Z","categories_index":".NET8 Api操作","tags_index":".NET,AutoFac,依赖注入","author_index":"小刘"},{"id":"4e5f3f8fca52da9f9ff077c4a363f25c","title":"EFCore配置教程","content":"1. 安装 EFCore 相关安装到Model\n安装 Microsoft.EntityFrameworkCore.SqlServer\n安装 Microsoft.EntityFrameworkCore.Tools\n\n安装到 API\n安装 Microsoft.EntityFrameworkCore.Design\n\n2. 配置连接地址在配置文件中添加连接字符串：\njson&quot;ConnectionStrings&quot;: &#123;\n    &quot;DefaultConnection&quot;: &quot;Data Source=.;Initial Catalog=Book;user id=sa;password=123;Max Pool Size=512;Min Pool Size=5;TrustServerCertificate=true;&quot;\n&#125;3.使用 NuGet 命令 （-F 跟新 ）jsonScaffold-DBContext &quot;Name=ConnectionStrings:DefaultConnection&quot; Microsoft.EntityFrameworkCore.SqlServer -context EFDbContext  -F4.专门注册数据上下文的方法jsonbuilder.Services.AddDbContext&lt;EFDbContext&gt;(options =&gt;\n&#123;\n    var connection = builder.Configuration.GetConnectionString(&quot;DefaultConnection&quot;);\n    options.UseSqlServer(\n        connection\n    );\n&#125;);","slug":"EFCore配置教程","date":"2024-07-05T00:52:10.000Z","categories_index":".NET8 Api操作","tags_index":".NET,EFCore,数据库","author_index":"小刘"}]